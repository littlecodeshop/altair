0001   0000             ; MINOL 2.1  Erik T. Mueller  May 1976
0002   004E             .ORG	116Q
0003   004E              
0004   004E             MEMEND	= 2FFFH
0005   004E             OS	= 8800H
0006   004E             ; RST functions
0007   004E             ;OUT	= 4h
0008   004E             ;CRLF	= 1h
0009   004E             ;INPUT	= 2h
0010   004E             RESET	= 0
0011   004E             CR	= 13
0012   004E              
0013   004E 3E 5D       MINOL:	MVI	A,']'	;OUTPUT PROMPT
0014   0050 E7          	RST	4
0015   0051 CD 2F 04    	CALL	INPTXT	;GET INPUT LINE
0016   0054 21 88 06    	LXI	H,TXT	;POINT TO INPUT TEXT WITH HL
0017   0057 7E          	MOV	A,M
0018   0058 CD 34 05    	CALL	CHEKN	;CHECK FOR LABEL
0019   005B D2 FF 00    	JNC	DIRECT	;IF NO LABEL, GO EXECUTE COMMAND
0020   005E 23          FND:	INX	H	;POINT TO FIRST NON-NUMERIC CHAR
0021   005F 7E          	MOV	A,M
0022   0060 CD 34 05    	CALL	CHEKN
0023   0063 DA 5E 00    	JC	FND
0024   0066 CD B1 04    	CALL	MKBIN	;CONVERT ASCII LABEL TO BINARY
0025   0069 11 00 07    	LXI	D,PROG	;THIS SECTION EDITS LINES OF THE PROGRAM
0026   006C 1A          ZIP:	LDAX	D
0027   006D FE 0D       	CPI	CR
0028   006F 13          	INX	D
0029   0070 C2 6C 00    	JNZ	ZIP
0030   0073 1A          	LDAX	D	;LOOK AT LINE NUMBER
0031   0074 FE FF       	CPI	-1
0032   0076 CA 7F 00    	JZ	INSRT
0033   0079 37          	STC
0034   007A 3F          	CMC
0035   007B B8          	CMP	B
0036   007C DA 6C 00    	JC	ZIP	;POINT TO LINE NUMBER GREATER THAN OR
0037   007F 7E          INSRT:	MOV	A,M	;OR EQUAL TO ENTERED LABEL
0038   0080 FE 0D       	CPI	CR
0039   0082 CA E5 00    	JZ	EKIL	;IF LABEL ALONE, DELETE LINE
0040   0085 0E 02       	MVI	C,2
0041   0087 23          IHR:	INX	H	;COUNT LENGTH OF LINE AND ADD 2
0042   0088 7E          	MOV	A,M
0043   0089 0C          	INR	C
0044   008A FE 0D       	CPI	CR
0045   008C C2 87 00    	JNZ	IHR
0046   008F 1A          OHIO:	LDAX	D	;IF LINE ENTERED ALREADY EXISTS, FIRST
0047   0090 B8          	CMP	B	;DELETE THE OLD ONE, THEN INSERT NEW 
0048   0091 C2 99 00    	JNZ	IBYH
0049   0094 D5          PZIY:	PUSH	D
0050   0095 CD E9 00    	CALL	KILLINE
0051   0098 D1          	POP	D
0052   0099 62          IBYH:	MOV	H,D	;HL POINTS TO FIRST LOCATION WHERE NEW
0053   009A 6B          	MOV	L,E	;LINE WILL BE PLACED
0054   009B D5          	PUSH	D	;SAVE POSITION IN STACK
0055   009C 13          EHR:	INX	D
0056   009D 1A          	LDAX	D
0057   009E FE FF       	CPI	-1
0058   00A0 C2 9C 00    	JNZ	EHR	;CONTINUE UNTIL DE POINTS TO END OF FILE
0059   00A3 79          	MOV	A,C	;LENGTH OF NEW LINE IN A
0060   00A4 42          	MOV	B,D
0061   00A5 4B          	MOV	C,E
0062   00A6 13          HBY:	INX	D
0063   00A7 23          	INX	H
0064   00A8 F5          	PUSH	PSW
0065   00A9 7B          	MOV	A,E
0066   00AA FE FF       	CPI	(MEMEND & 0FFH)	;MEMORY LIMIT
0067   00AC C2 B5 00    	JNZ	HII
0068   00AF 7A          	MOV	A,D
0069   00B0 FE 2F       	CPI	(MEMEND >> 8)
0070   00B2 CA 98 04    	JZ	ERR6	;OUT OF MEMORY ERROR
0071   00B5 F1          HII:	POP	PSW
0072   00B6 3D          	DCR	A
0073   00B7 C2 A6 00    	JNZ	HBY	;INCREMENT UNTIL DE POINTS TO NEW 
0074   00BA 0A          UPDT:	LDAX	B	;END-OF-FILE POSITION, AND HL POINTS
0075   00BB 12          	STAX	D	;TO WHERE FILE UPDATING BEGINS
0076   00BC 7B          	MOV	A,E	;BC POINTS TO END-OF-FILE
0077   00BD BD          	CMP	L
0078   00BE C2 C6 00    	JNZ	NHR
0079   00C1 7A          	MOV	A,D
0080   00C2 BC          	CMP	H
0081   00C3 CA CB 00    	JZ	NET
0082   00C6 0B          NHR:	DCX	B
0083   00C7 1B          	DCX	D
0084   00C8 C3 BA 00    	JMP	UPDT	;RELOCATE FILE LEAVING SPACE FOR NEW LINE
0085   00CB D1          NET:	POP	D	;RETRIEVE POINTER
0086   00CC 21 88 06    	LXI	H,TXT
0087   00CF 23          IFD:	INX	H
0088   00D0 7E          	MOV	A,M
0089   00D1 CD 34 05    	CALL	CHEKN
0090   00D4 DA CF 00    	JC	IFD	;POINT TO FIRST NON-NUMERIC CHARACTER
0091   00D7 3A 59 03    	LDA	BIN	;PUT LINE NUMBER IN A
0092   00DA 12          	STAX	D	;STORE LINE NUMBER IN FILE
0093   00DB 13          NTAT:	INX	D	;STORE LINE TEXT IN FILE
0094   00DC 7E          	MOV	A,M
0095   00DD 12          	STAX	D
0096   00DE 23          	INX	H
0097   00DF FE 0D       	CPI	CR
0098   00E1 C2 DB 00    	JNZ	NTAT
0099   00E4 C7          	RST	0	;GO BACK TO MONITOR SECTION
0100   00E5 CD E9 00    EKIL:	CALL	KILLINE	;DELETE LINE
0101   00E8 C7          	RST	0
0102   00E9 1A          KILLINE: LDAX D	;DELETE A LINE
0103   00EA B8          	CMP	B
0104   00EB C0          	RNZ	;IF DELETING A LINE THAT DOES NOT EXIST, RETURN
0105   00EC 62          	MOV	H,D
0106   00ED 6B          	MOV	L,E
0107   00EE 23          BBL:	INX	H
0108   00EF 7E          	MOV	A,M
0109   00F0 FE 0D       	CPI	CR
0110   00F2 C2 EE 00    	JNZ	BBL	;POINT TO NEXT LINE
0111   00F5 23          ARK:	INX	H	;RELOCATE FILE, DELETING LINE
0112   00F6 7E          	MOV	A,M
0113   00F7 12          	STAX	D
0114   00F8 FE FF       	CPI	-1
0115   00FA C8          	RZ
0116   00FB 13          	INX	D
0117   00FC C3 F5 00    	JMP	ARK
0118   00FF CF          DIRECT: RST	1	;DIRECT EXECUTION OF A STATEMENT
0119   0100 AF          	XRA	A
0120   0101 32 5A 03    	STA	LNE	;SET LNE (CURRENT LINE NO.) = 0
0121   0104 C3 20 01    	JMP	EXEC	;EXECUTE STATEMENT
0122   0107 21 00 07    RUN:	LXI	H,PROG	;RUN STATEMENT: START FROM BEGINNING OF 
0123   010A 7E          LPUB:	MOV	A,M	;PROGRAM. GET NEXT STATEMENT
0124   010B FE 3A       	CPI	':'
0125   010D 23          	INX	H
0126   010E CA 20 01    	JZ	EXEC	;IF NOT A NEW LINE, GO EXECUTE STATEMENT
0127   0111 FE 0D       	CPI	CR
0128   0113 C2 0A 01    	JNZ	LPUB
0129   0116 7E          BIB:	MOV	A,M
0130   0117 FE FF       	CPI	-1
0131   0119 CA 00 00    	JZ	RESET	;IF STATEMENT NO. = 377 (END OF PROGRAM),
0132   011C 32 5A 03    	STA	LNE	; GO BACK TO MONITOR
0133   011F 23          	INX	H	;IF NOT 377, STORE CURRENT LINE NO. AT LNE
0134   0120 CD F8 02    EXEC:	CALL	INT	;CHECK FOR KEYBOARD INTERRUPT
0135   0123 23          	INX	H
0136   0124 7E          	MOV	A,M
0137   0125 FE 3D       	CPI	'='	;CHECK FOR = IN SECOND COLUMN (ASSIGNMENT)
0138   0127 CA 90 01    	JZ	LET
0139   012A 2B          	DCX	H
0140   012B 7E          	MOV	A,M
0141   012C FE 28       	CPI	'('	;IF ( IN FIRST COLUMN (MEMORY LOCATION
0142   012E CA 90 01    	JZ	LET	; ASSIGNMENT) GO TO LET
0143   0131 FE 43       	CPI	'C'	;CHECK FOR "C"
0144   0133 C2 45 01    	JNZ	GSM	;IF NOT, GO ON
0145   0136 23          	INX	H
0146   0137 7E          	MOV	A,M
0147   0138 FE 41       	CPI	'A'
0148   013A CA D8 02    	JZ	CALL	;CALL STATEMENT
0149   013D FE 4C       	CPI	'L'
0150   013F CA C9 02    	JZ	CLR	;CLEAR STATEMENT
0151   0142 C3 89 04    	JMP	ERR3	;IF NEITHER, REPORT ERROR
0152   0145 FE 45       GSM:	CPI	'E'	;CHECK FOR "E" AS IN END
0153   0147 CA 00 00    	JZ	RESET
0154   014A FE 47       	CPI	'G'
0155   014C CA 10 03    	JZ	GOTO
0156   014F FE 22       	CPI	22H	;CHECK FOR " INDICATING REM STATEMENT
0157   0151 CA 0A 01    	JZ	LPUB
0158   0154 FE 4E       	CPI	'N'
0159   0156 CA ED 02    	JZ	NEW
0160   0159 FE 50       	CPI	'P'
0161   015B CA D9 01    	JZ	PR
0162   015E FE 4F       	CPI	'O'
0163   0160 CA 00 88    	JZ	OS	;ADDRESS OF USER'S MONITOR
0164   0163 FE 52       	CPI	'R'
0165   0165 CA 07 01    	JZ	RUN
0166   0168 FE 49       	CPI	'I'
0167   016A C2 7C 01    	JNZ	LS
0168   016D 23          	INX	H
0169   016E 7E          	MOV	A,M
0170   016F FE 4E       	CPI	'N'
0171   0171 CA 50 02    	JZ	IN
0172   0174 FE 46       	CPI	'F'
0173   0176 CA CF 05    	JZ	IF
0174   0179 C3 89 04    	JMP	ERR3
0175   017C FE 4C       LS:	CPI	'L'
0176   017E C2 89 04    	JNZ	ERR3
0177   0181 23          	INX	H
0178   0182 7E          	MOV	A,M
0179   0183 FE 45       	CPI	'E'
0180   0185 CA 90 01    	JZ	LET
0181   0188 FE 49       	CPI	'I'
0182   018A CA 56 05    	JZ	LIST
0183   018D C3 89 04    	JMP	ERR3
0184   0190 7E          LET:	MOV	A,M	;LET STATEMENT EXECUTOR
0185   0191 CD 25 05    	CALL	TERM	;FIND "="
0186   0194 DA 93 04    	JC	ERR5	;REPORT ERROR IF NO "=" BEFORE CR OR ":"
0187   0197 FE 3D       	CPI	'='
0188   0199 23          	INX	H
0189   019A C2 90 01    	JNZ	LET
0190   019D 11 69 06    	LXI	D,EXPR	;TRANSFER EXPRESSION TEXT TO 
0191   01A0 7E          MRENX:	MOV	A,M	;EXPRESSION BUFFER
0192   01A1 12          	STAX	D
0193   01A2 CD 25 05    	CALL	TERM
0194   01A5 23          	INX	H
0195   01A6 13          	INX	D
0196   01A7 D2 A0 01    	JNC	MRENX
0197   01AA CD 77 03    	CALL	EXPRS
0198   01AD 7E          SERCH:	MOV	A,M	;GO BACK BEFORE "="
0199   01AE FE 3D       	CPI	'='
0200   01B0 2B          	DCX	H
0201   01B1 C2 AD 01    	JNZ	SERCH
0202   01B4 7E          	MOV	A,M
0203   01B5 CD FC 04    	CALL	CHEKLTR
0204   01B8 D2 C3 01    	JNC	INLET	;IF NOT VARIABLE, GET MEMORY ADDRESS
0205   01BB CD E6 04    	CALL	GETADR
0206   01BE 79          	MOV	A,C
0207   01BF 12          	STAX	D	;STORE IN VARIABLE
0208   01C0 C3 0A 01    	JMP	LPUB	;NEXT STATEMENT
0209   01C3 FE 29       INLET:	CPI	')'
0210   01C5 C2 8E 04    	JNZ	ERR4
0211   01C8 2B          JHR:	DCX	H
0212   01C9 7E          	MOV	A,M
0213   01CA FE 28       	CPI	'('
0214   01CC C2 C8 01    	JNZ	JHR
0215   01CF 79          	MOV	A,C
0216   01D0 F5          	PUSH	PSW
0217   01D1 CD 2E 06    	CALL	VAL	;GET MEMORY LOCATION IN BC
0218   01D4 F1          	POP	PSW
0219   01D5 02          	STAX	B
0220   01D6 C3 0A 01    	JMP	LPUB
0221   01D9 23          PR:	INX	H	;PR STATEMENT EXECUTOR
0222   01DA 23          	INX	H	;SKIP ASSUMED CHARACTERS
0223   01DB 7E          	MOV	A,M
0224   01DC CD 25 05    	CALL	TERM	;IF BLANK PRINT, GO TO CR
0225   01DF DA 10 02    	JC	DCR
0226   01E2 FE 22       NXTE:	CPI	22H	;CHECK FOR LITERAL
0227   01E4 C2 14 02    	JNZ	VAR	;IF NOT, GO ON
0228   01E7 23          HR:	INX	H	;PRINT TEXT UNTIL " FOUND
0229   01E8 7E          	MOV	A,M
0230   01E9 FE 22       	CPI	22H
0231   01EB CA F8 01    	JZ	MRENO
0232   01EE CD 25 05    	CALL	TERM	;IF TERMINATOR BEFORE CLOSING QUOTE, ERROR
0233   01F1 DA 93 04    	JC	ERR5
0234   01F4 E7          	RST	4
0235   01F5 C3 E7 01    	JMP	HR
0236   01F8 23          MRENO:	INX	H
0237   01F9 7E          	MOV	A,M
0238   01FA CD 25 05    	CALL	TERM	;IF END OF STATEMENT WITHOUT SEMICOLON, DO CR
0239   01FD DA 10 02    	JC	DCR
0240   0200 FE 3B       	CPI	3BH	;semicolon
0241   0202 C2 93 04    	JNZ	ERR5
0242   0205 23          	INX	H
0243   0206 7E          	MOV	A,M
0244   0207 CD 25 05    	CALL	TERM	;IF TERM AFTER SEMICOLON, DO NOT PRINT CR
0245   020A DA 11 02    	JC	NCR
0246   020D C3 E2 01    	JMP	NXTE
0247   0210 CF          DCR:	RST	1
0248   0211 C3 0A 01    NCR:	JMP	LPUB
0249   0214 FE 24       VAR:	CPI	'$'
0250   0216 CA 40 02    	JZ	STR	;CHECK IF STRING
0251   0219 11 69 06    	LXI	D,EXPR
0252   021C 3E 20       	MVI	A,' '	;OUTPUT LEADING SPACE
0253   021E E7          	RST	4
0254   021F 7E          ER:	MOV	A,M	;TRANSFER EXPRESSION TEXT FROM PROGRAM TEXT
0255   0220 12          	STAX	D	; TO EXPRESSION BUFFER
0256   0221 23          	INX	H
0257   0222 13          	INX	D
0258   0223 CD 25 05    	CALL	TERM
0259   0226 DA 2E 02    	JC	HRX
0260   0229 FE 3B       	CPI	3BH	;semicolon
0261   022B C2 1F 02    	JNZ	ER
0262   022E 2B          HRX:	DCX	H
0263   022F 1B          	DCX	D
0264   0230 3E 0D       	MVI	A,CR
0265   0232 12          	STAX	D
0266   0233 CD 77 03    	CALL	EXPRS
0267   0236 41          	MOV	B,C
0268   0237 CD 78 05    	CALL	PBINBCD	;PRINT EXPRESSION'S VALUE
0269   023A 3E 20       	MVI	A,' '
0270   023C E7          	RST	4
0271   023D C3 F9 01    	JMP	MRENO+1
0272   0240 23          STR:	INX	H
0273   0241 CD 2E 06    	CALL	VAL	;GET START ADDRESS OF STRING IN BC AND PRINT
0274   0244 0A          MRE:	LDAX	B
0275   0245 E7          	RST	4
0276   0246 FE FF       	CPI	-1
0277   0248 03          	INX	B
0278   0249 C2 44 02    	JNZ	MRE
0279   024C 23          	INX	H
0280   024D C3 F9 01    	JMP	MRENO+1
0281   0250 23          IN:	INX	H	;INPUT STATEMENT
0282   0251 DB FF       	IN	-1
0283   0253 FE 00       	CPI	0	;IF SENSE SWITCHES DOWN, PRINT "?"
0284   0255 C2 5E 02    	JNZ	EAHR
0285   0258 3E 3F       	MVI	A,'?'
0286   025A E7          	RST	4
0287   025B 3E 20       	MVI	A,' '
0288   025D E7          	RST	4
0289   025E 7E          EAHR:	MOV	A,M
0290   025F CD FC 04    	CALL	CHEKLTR	;CHECK FOR VARIABLE
0291   0262 DA 76 02    	JC	LVB
0292   0265 FE 24       	CPI	'$'	;CHECK FOR INPUT STRING
0293   0267 CA A9 02    	JZ	STRIN
0294   026A FE 28       	CPI	'('	;CHECK FOR SINGLE MEMORY LOCATION
0295   026C C2 8E 04    	JNZ	ERR4
0296   026F CD 71 03    	CALL	VALDE	;GET LOCATION IN DE
0297   0272 E5          	PUSH	H
0298   0273 C3 7A 02    	JMP	HS
0299   0276 E5          LVB:	PUSH	H
0300   0277 CD E6 04    	CALL	GETADR	;GET ADDRESS OF LETTER VARIABLE
0301   027A D5          HS:	PUSH	D
0302   027B CD 2F 04    IHERE:	CALL	INPTXT	;INPUT A LINE
0303   027E CF          	RST	1
0304   027F 21 88 06    	LXI	H,TXT
0305   0282 7E          	MOV	A,M
0306   0283 CD 34 05    	CALL	CHEKN	;CHECK FOR A NUMBER
0307   0286 D2 96 02    	JNC	LETR
0308   0289 23          FD:	INX	H
0309   028A 7E          	MOV	A,M
0310   028B CD 34 05    	CALL	CHEKN
0311   028E DA 89 02    	JC	FD	;POINT TO FIRST NON-NUMERIC CHAR
0312   0291 C5          	PUSH	B
0313   0292 CD B1 04    	CALL	MKBIN	;CONVERT ASCII INPUT DATA TO BINARY
0314   0295 C1          	POP	B
0315   0296 D1          LETR:	POP	D
0316   0297 12          	STAX	D	;PUT A IN VARIABLE
0317   0298 E1          CHK:	POP	H
0318   0299 23          	INX	H
0319   029A 7E          	MOV	A,M
0320   029B FE 2C       	CPI	','	;CHECK FOR MORE INPUT VARIABLES
0321   029D CA 50 02    	JZ	IN
0322   02A0 CD 25 05    	CALL	TERM
0323   02A3 DA 0A 01    	JC	LPUB
0324   02A6 C3 93 04    	JMP	ERR5
0325   02A9 23          STRIN:	INX	H	;INPUT STRING
0326   02AA CD 2E 06    	CALL	VAL	;GET FIRST MEMORY LOCATION IN BC
0327   02AD E5          	PUSH	H
0328   02AE C5          	PUSH	B
0329   02AF CD 31 04    	CALL	INPXT
0330   02B2 C1          	POP	B
0331   02B3 CF          	RST	1
0332   02B4 21 88 06    	LXI	H,TXT
0333   02B7 7E          LD:	MOV	A,M	;STORE TEXT BEGINNING AT SPECIFIED LOC
0334   02B8 FE 0D       	CPI	CR
0335   02BA CA C3 02    	JZ	TE
0336   02BD 02          	STAX	B
0337   02BE 03          	INX	B
0338   02BF 23          	INX	H
0339   02C0 C3 B7 02    	JMP	LD
0340   02C3 3E FF       TE:	MVI	A,-1	;STORE 377 AT END OF STRING
0341   02C5 02          	STAX	B
0342   02C6 C3 98 02    	JMP	CHK
0343   02C9 11 09 05    CLR:	LXI	D,VARSTOR	;CLEAR EXECUTOR	VAR STORAGE
0344   02CC AF          LCR:	XRA	A
0345   02CD 12          	STAX	D
0346   02CE 13          	INX	D
0347   02CF 7B          	MOV	A,E
0348   02D0 FE 1C       	CPI	1Ch	;VAREND	;LAST VARIABLE LOCATION = 28D
0349   02D2 C2 CC 02    	JNZ	LCR
0350   02D5 C3 0A 01    	JMP	LPUB
0351   02D8 00          CALL:	NOP	;SKIP ASSUMED CHARACTERS
0352   02D9 23          	INX	H
0353   02DA 23          	INX	H
0354   02DB 23          	INX	H
0355   02DC CD 2E 06    	CALL	VAL	;GET ADDRESS IN BC
0356   02DF E5          	PUSH	H
0357   02E0 D5          	PUSH	D
0358   02E1 11 E8 02    	LXI	D,RET	;LOAD DE WITH RETURN ADDRESS
0359   02E4 D5          	PUSH	D	;PUSH RETURN ADDRESS ONTO STACK
0360   02E5 60          	MOV	H,B
0361   02E6 69          	MOV	L,C
0362   02E7 E9          	PCHL	;JUMP TO USER'S SUBROUTINE
0363   02E8 D1          RET:	POP	D
0364   02E9 E1          	POP	H
0365   02EA C3 0A 01    	JMP	LPUB
0366   02ED 11 00 07    NEW:	LXI	D,PROG	;'NEW' PROCESSOR
0367   02F0 3E 0D       	MVI	A,CR	;INITIALIZE PROGRAM AREA
0368   02F2 12          	STAX	D
0369   02F3 13          	INX	D
0370   02F4 3E FF       	MVI	A,-1
0371   02F6 12          	STAX	D
0372   02F7 C7          	RST	0
0373   02F8 F5          INT:	PUSH	PSW	;THIS ROUTINE CHECKS FOR CONTROL C
0374   02F9 DB 10       	IN	10H
0375   02FB FE 03       	CPI	3	;CONTROL C
0376   02FD CA 02 03    	JZ	BREAK
0377   0300 F1          	POP	PSW
0378   0301 C9          	RET
0379   0302 D1          BREAK:	POP	D
0380   0303 D1          	POP	D
0381   0304 D1          	POP	D
0382   0305 D1          	POP	D
0383   0306 CF          	RST	1
0384   0307 11 53 03    	LXI	D,BRKMSG
0385   030A CD F3 04    	CALL	PRNTXT
0386   030D C3 A3 04    	JMP	ATX
0387   0310 13          GOTO:	INX	D	;GOTO EXECUTOR
0388   0311 23          	INX	H	;SKIP ASSUMED CHARACTERS
0389   0312 23          	INX	H
0390   0313 23          	INX	H
0391   0314 11 69 06    	LXI	D,EXPR	;CALCULATE VALUE OF EXPRESSION
0392   0317 7E          RME:	MOV	A,M
0393   0318 12          	STAX	D
0394   0319 CD 25 05    	CALL	TERM
0395   031C 23          	INX	H
0396   031D 13          	INX	D
0397   031E D2 17 03    	JNC	RME
0398   0321 CD 77 03    	CALL	EXPRS
0399   0324 41          	MOV	B,C
0400   0325 79          	MOV	A,C
0401   0326 FE 00       	CPI	0
0402   0328 C2 31 03    	JNZ	JUMP
0403   032B 21 88 06    	LXI	H,TXT
0404   032E C3 FF 00    	JMP	DIRECT
0405   0331 21 00 07    JUMP:	LXI	H,PROG	;GOTO EXPRESSION
0406   0334 7E          DUP:	MOV	A,M
0407   0335 FE 0D       	CPI	CR
0408   0337 23          	INX	H
0409   0338 C2 34 03    	JNZ	DUP
0410   033B 7E          	MOV	A,M
0411   033C FE FF       	CPI	-1
0412   033E CA 7F 04    	JZ	ERR1
0413   0341 B8          	CMP	B
0414   0342 C2 34 03    	JNZ	DUP
0415   0345 C3 16 01    	JMP	BIB
0416   0348 2145525220FFERRMSG: .DB	"!ERR ",-1
0417   034E 20415420FF  AT:	.DB	" AT ",-1
0418   0353 425245414BFFBRKMSG: .DB	"BREAK",-1
0419   0359 00          BIN:	.DB	0
0420   035A 00 00       LNE:	.DW	0	;CURRENT LINE NUMBER
0421   035C C5          ACT:	PUSH	B	;GETS THE VALUE OF A MEMORY LOCATION
0422   035D EB          	XCHG
0423   035E CD 2E 06    	CALL	VAL	;PART OF THE EXPRS SUBROUTINE TO FOLLOW
0424   0361 EB          	XCHG
0425   0362 0A          	LDAX	B
0426   0363 C1          	POP	B
0427   0364 47          	MOV	B,A
0428   0365 13          NXGT:	INX	D
0429   0366 C3 AC 03    	JMP	GETNET
0430   0369 7B          NOTEQ:	MOV	A,E	;IF TWO EXPRESSIONS ARE NOT EQUAL, EXECUTE
0431   036A B9          	CMP	C	;STATEMENT (PART OF IF STATEMENT EXECUTOR
0432   036B C2 20 01    	JNZ	EXEC	;TO FOLLOW)
0433   036E C3 0A 01    	JMP	LPUB
0434   0371 CD 2E 06    VALDE:	CALL	VAL
0435   0374 50          	MOV	D,B
0436   0375 59          	MOV	E,C
0437   0376 C9          	RET
0438   0377 E5          EXPRS:	PUSH	H	;CALCULATES THE VALUE OF AN EXPRESSION
0439   0378 11 68 06    	LXI	D,EXPR-1	;STORED IN MEMORY
0440   037B 0E 00       	MVI	C,0	;DE IS THE CURSOR
0441   037D 1A          RETPT:	LDAX	D
0442   037E CD 25 05    	CALL	TERM	;CHECK FOR END OF EXPRESSION
0443   0381 D2 86 03    	JNC	GOMOR
0444   0384 E1          	POP	H
0445   0385 C9          	RET
0446   0386 F5          GOMOR:	PUSH	PSW	;SAVE OPERATION ON STACK
0447   0387 13          	INX	D	;GET TERM/FACTOR
0448   0388 1A          	LDAX	D
0449   0389 FE 27       	CPI	47Q	;SINGLE CHARACTER VALUE
0450   038B CA FE 03    	JZ	ASC
0451   038E FE 28       	CPI	'('	;MEMORY LOCATION
0452   0390 CA 5C 03    	JZ	ACT
0453   0393 FE 21       	CPI	'!'	;RANDOM NUMBER
0454   0395 CA 05 04    	JZ	RND
0455   0398 CD 34 05    	CALL	CHEKN
0456   039B DA ED 03    	JC	CONSTANT	;CONSTANT (NUMBER)
0457   039E CD FC 04    	CALL	CHEKLTR
0458   03A1 D2 93 04    	JNC	ERR5
0459   03A4 13          	INX	D
0460   03A5 D5          IVAR:	PUSH	D	;VARIABLE
0461   03A6 CD E6 04    	CALL	GETADR
0462   03A9 1A          	LDAX	D
0463   03AA 47          	MOV	B,A
0464   03AB D1          	POP	D
0465   03AC F1          GETNET: POP	PSW	;RETRIEVE OPERATION
0466   03AD FE 2B       	CPI	'+'
0467   03AF CA C4 03    	JZ	ADD
0468   03B2 FE 2D       	CPI	'-'
0469   03B4 CA CA 03    	JZ	SUB
0470   03B7 FE 2A       	CPI	'*'
0471   03B9 CA D0 03    	JZ	MULT
0472   03BC FE 2F       	CPI	'/'
0473   03BE CA DB 03    	JZ	DIV
0474   03C1 C3 93 04    	JMP	ERR5
0475   03C4 79          ADD:	MOV	A,C	;ADD C=C+B
0476   03C5 80          	ADD	B
0477   03C6 4F          	MOV	C,A
0478   03C7 C3 7D 03    	JMP	RETPT
0479   03CA 79          SUB:	MOV	A,C	;C=C-B
0480   03CB 90          	SUB	B
0481   03CC 4F          	MOV	C,A
0482   03CD C3 7D 03    	JMP	RETPT
0483   03D0 79          MULT:	MOV	A,C	;C=C*B
0484   03D1 05          	DCR	B
0485   03D2 81          GBK:	ADD	C
0486   03D3 05          	DCR	B
0487   03D4 C2 D2 03    	JNZ	GBK
0488   03D7 4F          	MOV	C,A
0489   03D8 C3 7D 03    	JMP	RETPT
0490   03DB 79          DIV:	MOV	A,C	;C=C/B
0491   03DC 0E 00       	MVI	C,0
0492   03DE 0C          CTUE:	INR	C	
0493   03DF 90          	SUB	B
0494   03E0 CA EA 03    	JZ	ZER
0495   03E3 DA E9 03    	JC	MIN
0496   03E6 C3 DE 03    	JMP	CTUE
0497   03E9 0D          MIN:	DCR	C
0498   03EA C3 7D 03    ZER:	JMP	RETPT
0499   03ED 13          CONSTANT: INX D
0500   03EE 1A          	LDAX	D
0501   03EF CD 34 05    	CALL	CHEKN
0502   03F2 DA ED 03    	JC	CONSTANT
0503   03F5 EB          	XCHG
0504   03F6 CD C3 05    	CALL	SURE
0505   03F9 EB          	XCHG
0506   03FA 47          	MOV	B,A
0507   03FB C3 AC 03    	JMP	GETNET
0508   03FE 13          ASC:	INX	D
0509   03FF 1A          	LDAX	D
0510   0400 47          	MOV	B,A
0511   0401 13          	INX	D
0512   0402 C3 65 03    	JMP	NXGT
0513   0405 21 2E 04    RND:	LXI	H,SH+3
0514   0408 06 08       	MVI	B,8
0515   040A 7E          	MOV	A,M
0516   040B 07          RTOP:	RLC
0517   040C 07          	RLC
0518   040D 07          	RLC
0519   040E AE          	XRA	M
0520   040F 17          	RAL
0521   0410 17          	RAL
0522   0411 2D          	DCR	L
0523   0412 2D          	DCR	L
0524   0413 2D          	DCR	L
0525   0414 7E          	MOV	A,M
0526   0415 17          	RAL
0527   0416 77          	MOV	M,A
0528   0417 2C          	INR	L
0529   0418 7E          	MOV	A,M
0530   0419 17          	RAL
0531   041A 77          	MOV	M,A
0532   041B 2C          	INR	L
0533   041C 7E          	MOV	A,M
0534   041D 17          	RAL	
0535   041E 77          	MOV	M,A
0536   041F 2C          	INR	L
0537   0420 7E          	MOV	A,M
0538   0421 17          	RAL
0539   0422 77          	MOV	M,A
0540   0423 04          	INR	B
0541   0424 C2 0B 04    	JNZ	RTOP
0542   0427 47          	MOV	B,A
0543   0428 C3 65 03    	JMP	NXGT
0544   042B 11 99 5A E9 SH:	.DB	21Q,231Q,132Q,351Q	;SEED
0545   042F 0E 00       INPTXT: MVI	C,0	;INPUT A LINE OF 72 CHARACTERS
0546   0431 21 87 06    INPXT:	LXI	H,TXT-1
0547   0434 D7          INO:	RST	2
0548   0435 47          HRER:	MOV	B,A
0549   0436 79          	MOV	A,C
0550   0437 FE 00       	CPI	0
0551   0439 78          	MOV	A,B
0552   043A C2 42 04    	JNZ	MID
0553   043D FE 20       	CPI	' '
0554   043F CA 34 04    	JZ	INO	;DO NOT ACCEPT SPACE IF OUTSIDE QUOTES
0555   0442 FE 22       MID:	CPI	22H
0556   0444 C2 54 04    	JNZ	GOON
0557   0447 79          	MOV	A,C
0558   0448 FE 00       	CPI	0
0559   044A CA 52 04    	JZ	MRF
0560   044D 0E 00       	MVI	C,0
0561   044F C3 54 04    	JMP	GOON
0562   0452 0E 03       MRF:	MVI	C,3
0563   0454 FE 0C       GOON:	CPI	14Q	;IF CONTROL L REDO LINE
0564   0456 C2 60 04    	JNZ	HRD
0565   0459 3E 5C       	MVI	A,5CH	;"\"
0566   045B E7          	RST	4
0567   045C CF          	RST	1
0568   045D C3 2F 04    	JMP	INPTXT
0569   0460 FE 0D       HRD:	CPI	CR
0570   0462 C2 68 04    	JNZ	CHM
0571   0465 C3 C9 05    	JMP	HELP
0572   0468 FE 13       CHM:	CPI	23Q	;IF CONTROL S GO BACK A CHARACTER
0573   046A C2 74 04    	JNZ	CTN
0574   046D 3E 5F       	MVI	A,'_'
0575   046F E7          	RST	4
0576   0470 2B          	DCX	H
0577   0471 C3 34 04    	JMP	INO
0578   0474 7D          CTN:	MOV	A,L
0579   0475 FE 48       	CPI	48H	;TXTEND=72d
0580   0477 CA 84 04    	JZ	ERR2	;IF OVER 72 CHARACTERS REPORT ERROR
0581   047A 23          	INX	H
0582   047B 70          STOR:	MOV	M,B
0583   047C C3 34 04    	JMP	INO
0584   047F 06 31       ERR1:	MVI	B,'1'
0585   0481 C3 9A 04    	JMP	ERR
0586   0484 06 32       ERR2:	MVI	B,'2'
0587   0486 C3 9A 04    	JMP	ERR
0588   0489 06 33       ERR3:	MVI	B,'3'
0589   048B C3 9A 04    	JMP	ERR
0590   048E 06 34       ERR4:	MVI	B,'4'
0591   0490 C3 9A 04    	JMP	ERR
0592   0493 06 35       ERR5:	MVI	B,'5'
0593   0495 C3 9A 04    	JMP	ERR
0594   0498 06 36       ERR6:	MVI	B,'6'
0595   049A CF          ERR:	RST	1	;PRINT 'ERR' MESSAGE
0596   049B 11 48 03    	LXI	D,ERRMSG
0597   049E CD F3 04    	CALL	PRNTXT
0598   04A1 78          	MOV	A,B
0599   04A2 E7          	RST	4
0600   04A3 11 4E 03    ATX:	LXI	D,AT
0601   04A6 CD F3 04    	CALL	PRNTXT
0602   04A9 3A 5A 03    	LDA	LNE
0603   04AC 47          	MOV	B,A
0604   04AD CD 78 05    	CALL	PBINBCD
0605   04B0 C7          	RST	0
0606   04B1 D5          MKBIN:	PUSH	D	;GET VALUE OF ASCII NUMBERS
0607   04B2 2B          	DCX	H
0608   04B3 7E          	MOV	A,M
0609   04B4 D6 30       	SUI	30H	;"0"
0610   04B6 47          	MOV	B,A
0611   04B7 2B          	DCX	H
0612   04B8 7E          	MOV	A,M
0613   04B9 CD 34 05    	CALL	CHEKN
0614   04BC DA C6 04    	JC	STOC
0615   04BF 0E 00       	MVI	C,0
0616   04C1 1E 00       	MVI	E,0
0617   04C3 C3 DB 04    	JMP	INK2
0618   04C6 D6 30       STOC:	SUI	30H	;"0"
0619   04C8 4F          	MOV	C,A
0620   04C9 2B          ENT:	DCX	H
0621   04CA 7E          	MOV	A,M
0622   04CB CD 34 05    	CALL	CHEKN
0623   04CE DA D6 04    	JC	STOE
0624   04D1 1E 00       	MVI	E,0
0625   04D3 C3 DA 04    	JMP	INK3
0626   04D6 7E          STOE:	MOV	A,M
0627   04D7 D6 30       	SUI	30H	;"0"
0628   04D9 5F          	MOV	E,A
0629   04DA 23          INK3:	INX	H
0630   04DB 23          INK2:	INX	H
0631   04DC 23          	INX	H
0632   04DD CD 41 05    	CALL	BCDBIN
0633   04E0 78          	MOV	A,B
0634   04E1 32 59 03    	STA	BIN
0635   04E4 D1          	POP	D
0636   04E5 C9          	RET
0637   04E6 E5          GETADR: PUSH	H	;GET ADDRESS OF VARIABLE
0638   04E7 11 09 05    	LXI	D,VARSTOR
0639   04EA D6 41       	SUI	41H	;"A"
0640   04EC 26 00       	MVI	H,0
0641   04EE 6F          	MOV	L,A
0642   04EF 19          	DAD	D
0643   04F0 EB          	XCHG
0644   04F1 E1          	POP	H
0645   04F2 C9          	RET
0646   04F3 1A          PRNTXT: LDAX	D	;PRINT TEXT POINTED BY DE
0647   04F4 FE FF       	CPI	-1
0648   04F6 C8          	RZ
0649   04F7 E7          	RST	4
0650   04F8 13          	INX	D
0651   04F9 C3 F3 04    	JMP	PRNTXT
0652   04FC 37          CHEKLTR:	STC	;CHECK IF CHAR IS A LETTER
0653   04FD 3F          	CMC
0654   04FE FE 41       	CPI	'A'
0655   0500 DA 07 05    	JC	NOTAP
0656   0503 37          	STC
0657   0504 FE 5B       	CPI	'Z'+1
0658   0506 C9          	RET
0659   0507 3F          NOTAP:	CMC
0660   0508 C9          	RET
0661   0509 000000000000VARSTOR: .db	0,0,0,0,0,0,0,0
0661   050F 0000
0662   0511 000000000000	 .db    0,0,0,0,0,0,0,0
0662   0517 0000
0663   0519 000000000000	 .db    0,0,0,0,0,0,0,0
0663   051F 0000
0664   0521 00 00 00 00 	 .db    0,0,0,0	;VARIABLE STORAGE (28)
0665   0525             ;VAREND: .db	0
0666   0525             
0667   0525             
0668   0525 FE 0D       TERM:	CPI	CR	;CHECK FOR STATEMENT TERMINATOR
0669   0527 CA 32 05    	JZ	YES
0670   052A FE 3A       	CPI	':'
0671   052C CA 32 05    	JZ	YES
0672   052F 37          	STC
0673   0530 3F          	CMC
0674   0531 C9          	RET
0675   0532 37          YES:	STC
0676   0533 C9          	RET
0677   0534 37          CHEKN:	STC
0678   0535 3F          	CMC
0679   0536 FE 30       	CPI	'0'
0680   0538 DA 3F 05    	JC	NOTA
0681   053B 37          	STC
0682   053C FE 3A       	CPI	'9'+1
0683   053E C9          NOT:	RET
0684   053F 3F          NOTA:	CMC
0685   0540 C9          	RET
0686   0541 3E 0A       BCDBIN: MVI	A,10	;BCD TO BINARY ROUTINE
0687   0543 80          	ADD	B
0688   0544 47          	MOV	B,A
0689   0545 0D          	DCR	C
0690   0546 C2 41 05    	JNZ	BCDBIN
0691   0549 4B          SEC:	MOV	C,E
0692   054A 7B          	MOV	A,E
0693   054B FE FF       	CPI	-1
0694   054D C8          THI:	RZ
0695   054E 3E 64       	MVI	A,100
0696   0550 80          	ADD	B
0697   0551 47          	MOV	B,A
0698   0552 0D          	DCR	C
0699   0553 C3 4D 05    	JMP	THI
0700   0556 11 01 07    LIST:	LXI	D,PROG+1	;LIST COMMAND
0701   0559 1A          NEXN:	LDAX	D
0702   055A FE FF       	CPI	-1
0703   055C CA 0A 01    	JZ	LPUB
0704   055F 47          	MOV	B,A
0705   0560 CD 78 05    	CALL	PBINBCD
0706   0563 3E 20       	MVI	A,' '
0707   0565 E7          	RST	4
0708   0566 13          	INX	D
0709   0567 1A          	LDAX	D
0710   0568 E7          OU:	RST	4
0711   0569 FE 0D       	CPI	CR
0712   056B C2 73 05    	JNZ	MREN
0713   056E 13          	INX	D
0714   056F CF          	RST	1
0715   0570 C3 59 05    	JMP	NEXN
0716   0573 13          MREN:	INX	D
0717   0574 1A          	LDAX	D
0718   0575 C3 68 05    	JMP	OU
0719   0578 C5          PBINBCD: PUSH B	;PRINT BINARY NUMBER
0720   0579 D5          	PUSH	D
0721   057A 16 00       	MVI	D,0
0722   057C 4A          	MOV	C,D
0723   057D 78          	MOV	A,B
0724   057E D6 64       IFIR:	SUI	100
0725   0580 DA 87 05    	JC	ISEC
0726   0583 0C          	INR	C
0727   0584 C3 7E 05    	JMP	IFIR
0728   0587 06 64       ISEC:	MVI	B,100
0729   0589 80          	ADD	B
0730   058A 47          	MOV	B,A
0731   058B 3E 30       	MVI	A,'0'
0732   058D 81          	ADD	C
0733   058E FE 30       	CPI	'0'
0734   0590 CA B4 05    	JZ	NP
0735   0593 E7          	RST	4
0736   0594 0E 00       COM:	MVI	C,0
0737   0596 78          	MOV	A,B
0738   0597 D6 0A       ITHR:	SUI	10
0739   0599 DA A0 05    	JC	FOR
0740   059C 0C          	INR	C
0741   059D C3 97 05    	JMP	ITHR
0742   05A0 06 0A       FOR:	MVI	B,10
0743   05A2 80          	ADD	B
0744   05A3 47          	MOV	B,A
0745   05A4 3E 30       	MVI	A,'0'
0746   05A6 81          	ADD	C
0747   05A7 FE 30       	CPI	'0'
0748   05A9 CA B9 05    	JZ	INU
0749   05AC E7          IPR:	RST	4
0750   05AD 3E 30       DPR:	MVI	A,'0'
0751   05AF 80          	ADD	B
0752   05B0 E7          	RST	4
0753   05B1 D1          	POP	D
0754   05B2 C1          	POP	B
0755   05B3 C9          	RET
0756   05B4 16 01       NP:	MVI	D,1
0757   05B6 C3 94 05    	JMP	COM
0758   05B9 4F          INU:	MOV	C,A
0759   05BA AF          	XRA	A
0760   05BB BA          	CMP	D
0761   05BC 79          	MOV	A,C
0762   05BD C2 AD 05    	JNZ	DPR
0763   05C0 C3 AC 05    	JMP	IPR
0764   05C3 C5          SURE:	PUSH	B	;SAVES BC AND CALLS MKBIN
0765   05C4 CD B1 04    	CALL	MKBIN
0766   05C7 C1          	POP	B
0767   05C8 C9          	RET
0768   05C9 23          HELP:	INX	H	;ADDS 377 TERMINATOR AT END OF INPUT TEXT
0769   05CA 70          	MOV	M,B
0770   05CB 23          	INX	H
0771   05CC 36 FF       	MVI	M,-1
0772   05CE C9          	RET
0773   05CF 11 69 06    IF:	LXI	D,EXPR	;IF STATEMENT
0774   05D2 23          NGO:	INX	H	;FIRST EXPRESSION
0775   05D3 7E          	MOV	A,M
0776   05D4 FE 23       	CPI	43Q	;# SIGN
0777   05D6 CA EE 05    	JZ	COMP
0778   05D9 FE 3D       	CPI	'='
0779   05DB CA EE 05    	JZ	COMP
0780   05DE FE 3C       	CPI	'<'
0781   05E0 CA EE 05    	JZ	COMP
0782   05E3 CD 25 05    	CALL	TERM
0783   05E6 DA 93 04    	JC	ERR5
0784   05E9 12          	STAX	D
0785   05EA 13          	INX	D
0786   05EB C3 D2 05    	JMP	NGO
0787   05EE F5          COMP:	PUSH	PSW
0788   05EF 3E 0D       	MVI	A,CR
0789   05F1 12          	STAX	D
0790   05F2 CD 77 03    	CALL	EXPRS
0791   05F5 C5          	PUSH	B
0792   05F6 11 69 06    	LXI	D,EXPR
0793   05F9 23          NXTVR:	INX	H	;SECOND EXPRESSION
0794   05FA 7E          	MOV	A,M
0795   05FB FE 3B       	CPI	3BH	;semicolon
0796   05FD CA 0B 06    	JZ	PHI
0797   0600 CD 25 05    	CALL	TERM
0798   0603 DA 93 04    	JC	ERR5
0799   0606 12          	STAX	D
0800   0607 13          	INX	D
0801   0608 C3 F9 05    	JMP	NXTVR
0802   060B 23          PHI:	INX	H
0803   060C 3E 0D       	MVI	A,CR
0804   060E 12          	STAX	D
0805   060F CD 77 03    	CALL	EXPRS
0806   0612 D1          	POP	D
0807   0613 F1          	POP	PSW
0808   0614 FE 23       	CPI	43Q	;CHECK RELATIONAL OPERATOR	(# SIGN HERE)
0809   0616 CA 69 03    	JZ	NOTEQ
0810   0619 FE 3C       	CPI	'<'
0811   061B CA 26 06    	JZ	LESSTH
0812   061E 7B          EQU:	MOV	A,E	;CHECK IF =
0813   061F B9          	CMP	C
0814   0620 CA 20 01    	JZ	EXEC
0815   0623 C3 0A 01    	JMP	LPUB
0816   0626 7B          LESSTH: MOV	A,E	;CHECK IF <
0817   0627 B9          	CMP	C
0818   0628 D2 0A 01    	JNC	LPUB
0819   062B C3 20 01    	JMP	EXEC
0820   062E D5          VAL:	PUSH	D	;GET ADDRESS OF MEMORY LOCATION
0821   062F 11 69 06    	LXI	D,EXPR
0822   0632 23          SHME:	INX	H
0823   0633 7E          	MOV	A,M
0824   0634 12          	STAX	D
0825   0635 CD 25 05    	CALL	TERM
0826   0638 13          	INX	D
0827   0639 DA 93 04    	JC	ERR5
0828   063C FE 2C       	CPI	','
0829   063E C2 32 06    	JNZ	SHME
0830   0641 1B          	DCX	D
0831   0642 3E 0D       	MVI	A,CR
0832   0644 12          	STAX	D
0833   0645 CD 77 03    	CALL	EXPRS
0834   0648 C5          	PUSH	B
0835   0649 11 69 06    	LXI	D,EXPR
0836   064C 23          MIG:	INX	H
0837   064D 7E          	MOV	A,M
0838   064E 12          	STAX	D
0839   064F CD 25 05    	CALL	TERM
0840   0652 13          	INX	D
0841   0653 DA 93 04    	JC	ERR5
0842   0656 FE 29       	CPI	')'
0843   0658 C2 4C 06    	JNZ	MIG
0844   065B 1B          	DCX	D
0845   065C 3E 0D       	MVI	A,CR
0846   065E 12          	STAX	D
0847   065F CD 77 03    	CALL	EXPRS
0848   0662 79          	MOV	A,C
0849   0663 C1          	POP	B
0850   0664 41          	MOV	B,C
0851   0665 4F          	MOV	C,A
0852   0666 D1          	POP	D
0853   0667 C9          	RET
0854   0668 2B          	.DB	'+'
0855   0669 000000000000EXPR:	.db	0,0,0,0,0,0,0,0
0855   066F 0000
0856   0671 000000000000	.db	0,0,0,0,0,0,0,0
0856   0677 0000
0857   0679 000000000000	.db	0,0,0,0,0,0,0,0
0857   067F 0000
0858   0681 000000000000	.db	0,0,0,0,0,0,0	;EXPRESSION BUFFER 31
0858   0687 00
0859   0688 000000000000TXT:	.db	0,0,0,0,0,0,0,0
0859   068E 0000
0860   0690 000000000000	.db	0,0,0,0,0,0,0,0
0860   0696 0000
0861   0698 000000000000	.db	0,0,0,0,0,0,0,0
0861   069E 0000
0862   06A0 000000000000	.db	0,0,0,0,0,0,0,0
0862   06A6 0000
0863   06A8 000000000000	.db	0,0,0,0,0,0,0,0
0863   06AE 0000
0864   06B0 000000000000	.db	0,0,0,0,0,0,0,0
0864   06B6 0000
0865   06B8 000000000000	.db	0,0,0,0,0,0,0,0
0865   06BE 0000
0866   06C0 000000000000	.db	0,0,0,0,0,0,0,0	;LINE BUFFER (INPUT TEXT) 72
0866   06C6 0000
0867   06C8             ;TXTEND: .DB	0
0868   06C8             
0869   0700             .ORG	3400Q
0870   0700 0D FF       PROG:	.DB	CR,-1
0871   0702              
0872   0702             .END
0873   0702             
tasm: Number of errors = 0
